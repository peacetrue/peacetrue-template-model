package ${basePackageName};

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.RestController;

import java.util.Arrays;
import java.util.List;


/**
 * @author xiayx            
 */
@RestController
@RequestMapping(value = "/${module-name}s")
public class ${ModuleName}Controller {

    private Logger logger = LoggerFactory.getLogger(getClass());
    @Autowired
    private ${ModuleName}Service ${moduleName}Service;

    @PostMapping
    public ${ModuleName}VO add(${ModuleName}Add params) {
        logger.info("新增信息[{}]", params);
        return ${moduleName}Service.add(params);
    }

    @GetMapping(params = "page")
    public Page<${ModuleName}VO> query(${ModuleName}Query params,
                                       @PageableDefault(sort = "createdTime", direction = Sort.Direction.DESC) Pageable pageable) {
        logger.info("分页查询信息[{}]", params);
        return ${moduleName}Service.query(params, pageable);
    }

    @GetMapping(value = "${esc.d}{peacetrue.${module-name}.urls.query:}")
    public List<${ModuleName}VO> query(${ModuleName}Query params) {
        logger.info("查询信息[{}]", params);
        return ${moduleName}Service.query(params);
    }

    @GetMapping("/{id}")
    public ${ModuleName}VO get(@PathVariable Long id) {
        logger.info("获取信息[{}]详情", id);
        return ${moduleName}Service.get(new ${ModuleName}Get(id));
    }

    @PutMapping("/{id}")
    public int modify(${ModuleName}Modify params) {
        logger.info("修改信息[{}]", params);
        return ${moduleName}Service.modify(params);
    }

    @DeleteMapping("/{id}")
    public int delete(@PathVariable Long id) {
        logger.info("删除信息[{}]", id);
        return ${moduleName}Service.delete(new ${ModuleName}Delete(id));
    }

}
