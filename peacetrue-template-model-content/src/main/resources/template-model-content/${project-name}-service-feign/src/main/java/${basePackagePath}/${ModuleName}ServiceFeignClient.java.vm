package ${basePackageName};

import com.github.peacetrue.result.exception.ResultException;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.cloud.openfeign.SpringQueryMap;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import javax.annotation.Nullable;
import java.util.List;

@FeignClient(name = "${project-name}-app-admin")
public interface ${ModuleName}ServiceFeignClient extends ${ModuleName}Service {

    @Override
    @PostMapping(value = "/${module-name}s")
    ${ModuleName}VO add(${ModuleName}Add params) throws ResultException;

    @Override
    @GetMapping(value = "/${module-name}s", params = "page")
    Page<${ModuleName}VO> query(@Nullable @SpringQueryMap ${ModuleName}Query params, @Nullable Pageable pageable, @SpringQueryMap String... projection) throws ResultException;

    @Override
    @GetMapping(value = "/${module-name}s")
    List<${ModuleName}VO> query(@SpringQueryMap ${ModuleName}Query params, Sort sort, @SpringQueryMap String... projection) throws ResultException;

    @Override
    @GetMapping(value = "/${module-name}s")
    List<${ModuleName}VO> query(@SpringQueryMap ${ModuleName}Query params, @SpringQueryMap String... projection) throws ResultException;

    @Override
    @GetMapping(value = "/${module-name}s/get")
    ${ModuleName}VO get(@SpringQueryMap ${ModuleName}Get params, @SpringQueryMap String... projection) throws ResultException;

    @Override
    @PostMapping(value = "/${module-name}s")
    void modify(${ModuleName}Modify params) throws ResultException;

    @Override
    @GetMapping(value = "/${module-name}s/delete")
    void delete(@SpringQueryMap ${ModuleName}Delete params) throws ResultException;
}
