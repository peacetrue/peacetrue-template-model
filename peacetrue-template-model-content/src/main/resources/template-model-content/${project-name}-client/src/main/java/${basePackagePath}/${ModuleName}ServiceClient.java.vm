package ${basePackageName};

import org.springframework.cloud.openfeign.SpringQueryMap;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import reactivefeign.spring.config.ReactiveFeignClient;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import javax.annotation.Nullable;

/**
 * ${nationalName}客户端
 *
 * @author peace
 */
@ReactiveFeignClient(name = "${project-name}", url = "${esc.d}{peacetrue.${ModuleName}.url:${esc.d}{peacetrue.server.url:}}")
public interface ${ModuleName}ServiceClient {

    @PostMapping(value = "/${module-name}s")
    ${ModuleName}VO add(${ModuleName}Add params);

    @GetMapping(value = "/${module-name}s", params = "page")
    Page<${ModuleName}VO> query(@Nullable @SpringQueryMap ${ModuleName}Query params, @Nullable Pageable pageable, @SpringQueryMap String... projection) ;

    @GetMapping(value = "/${module-name}s", params = "sort")
    ${ModuleName}VO query(@SpringQueryMap ${ModuleName}Query params, Sort sort, @SpringQueryMap String... projection) ;

    @GetMapping(value = "/${module-name}s")
    ${ModuleName}VO query(@SpringQueryMap ${ModuleName}Query params, @SpringQueryMap String... projection) ;

    @GetMapping(value = "/${module-name}s/get")
    ${ModuleName}VO get(@SpringQueryMap ${ModuleName}Get params, @SpringQueryMap String... projection) ;

    @PutMapping(value = "/${module-name}s")
    Integer modify(${ModuleName}Modify params) ;

    @DeleteMapping(value = "/${module-name}s/delete")
    Integer delete(@SpringQueryMap ${ModuleName}Delete params);

}
