buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath('com.github.peacetrue.generator:peacetrue-generator-plugin:1.1.0-SNAPSHOT')
        classpath 'com.github.peacetrue.template:peacetrue-template-model-content:3.0.0-SNAPSHOT', {
            exclude group: 'ch.qos.logback'
        }
        classpath('com.h2database:h2:1.4.196')
        classpath "io.spring.gradle:dependency-management-plugin:1+"
    }
}

apply plugin: 'com.github.peacetrue.generator'
peacetrueGenerate {
    properties = [
            'peacetrue.generator.target-path': "${esc.d}rootDir",
            'spring.datasource.schema'       : "file:${esc.d}rootDir/${project-name}-service-impl/src/main/resources/schema-h2.sql",
    ]
    propertiesPath = "file:${esc.d}rootDir/${project-name}-service-impl/src/test/resources/application-${domain-name}-service-test.yml"
    context = [
            'project-name'     : "${project-name}",
            'basePackageName'  : "${basePackageName}",
            'DomainName'       : '$DomainName',
            'domainDescription': '$domainDescription',
    ]
}


allprojects { project ->

    group "com.github.peacetrue.$domainname"
    version "1.0.0-SNAPSHOT"
    description "$domainDescription"

    apply plugin: "java-library"
    sourceCompatibility = 9
    targetCompatibility = 9

    repositories {
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        mavenCentral()
        jcenter()
    }

    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        imports {
            mavenBom "com.github.peacetrue:peacetrue-dependencies:2+"
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        implementation "com.google.code.findbugs:jsr305"

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
        testImplementation "ch.qos.logback:logback-classic"
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.unitils:unitils-core'
        testImplementation 'org.jeasy:easy-random-core'
        testImplementation 'org.yaml:snakeyaml'
        testImplementation 'org.jeasy:easy-random-bean-validation', {
            exclude('group': 'org.yaml')
        }
    }

    test {
        useJUnitPlatform()
    }

}
